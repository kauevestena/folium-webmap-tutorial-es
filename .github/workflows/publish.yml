# 📄 Flujo de trabajo de GitHub Actions: Publicar mapa web
name: Publish Web Map

# 🕒 Activa el flujo de trabajo diariamente a las 03:00 UTC, en cada push y permite ejecuciones manuales
on:
  push:
  schedule:
    - cron: '0 3 * * *'  # Se ejecuta diariamente a las 03:00 UTC
  workflow_dispatch:

# 🔐 Establecer permisos para el flujo de trabajo
permissions:
  contents: write       # Para enviar cambios al repositorio
  pages: write          # Para desplegar en GitHub Pages
  id-token: write       # Requerido para el despliegue en GitHub Pages

# 🛠️ Definir los trabajos a ejecutar
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 📥 Paso 1: Clonar el código del repositorio
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Obtener el historial completo para operaciones de git

      # 🐍 Paso 2: Configurar el entorno de Python
      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Especificar la versión de Python

      # 📦 Paso 3: Instalar dependencias de Python
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # 🗺️ Paso 4: Generar el mapa web
      - name: Generate Map
        run: |
          python make_map.py  # Ejecutar el script para crear index.html en el directorio 'map'

      # ⚙️ Paso 5: Configurar Git para confirmar cambios
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"  # Establecer nombre de usuario de Git
          git config user.email "${{ github.actor }}@users.noreply.github.com"  # Establecer correo electrónico de Git

      # 🔄 Paso 6: Obtener los últimos cambios para evitar errores de non-fast-forward
      - name: Pull Latest Changes
        run: |
          git pull origin main  # Actualizar la rama local con los cambios remotos

      # 💾 Paso 7: Confirmar y enviar cambios
      - name: Commit and Push Changes
        run: |
          git add . 
          git commit -m "Update index.html with latest map data" || echo "No changes to commit"
          git push origin main  # Enviar cambios al repositorio

      # 📤 Paso 8: Subir el directorio 'map' como un artefacto para el despliegue
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages  # Nombre del artefacto
          path: ./  # Directorio a subir

  deploy:
    # 🚀 El trabajo de despliegue depende del trabajo de 'build'
    needs: build
    runs-on: ubuntu-latest

    # 🌐 Definir el entorno de despliegue
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL del sitio desplegado

    steps:
      # 🚀 Paso 9: Desplegar el artefacto subido en GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
